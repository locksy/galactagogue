{"version":3,"file":"gyro-gradient.umd.js","sources":["../src/index.js"],"sourcesContent":["const isBrowser = () =>\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst isNumber = v => typeof v === \"number\";\nconst isString = v => typeof v === \"string\";\nconst isSupported = () => isBrowser() && \"DeviceOrientationEvent\" in window;\n\nlet createGyroGradient = () => {};\n\nif (isSupported()) {\n  const STRENGTH = 300;\n  const PI_DIVIDED_BY_180 = Math.PI / 180;\n\n  // 生成噪音\n  const generateNoise = (width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        ctx.fillStyle = `rgba(0, 0, 0, ${Math.random()})`;\n        ctx.fillRect(x, y, 1, 1);\n      }\n    }\n    return canvas;\n  };\n\n  const state = {\n    orientationInitial: null,\n    orientation: {\n      alpha: null,\n      beta: null,\n      gamma: null\n    },\n    viewport: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    origin: { x: 0, y: 0, z: STRENGTH },\n    patterns: {\n      noise: generateNoise(\n        64 * window.devicePixelRatio,\n        64 * window.devicePixelRatio\n      )\n    },\n    drawers: []\n  };\n\n  // 创建渐变层\n  createGyroGradient = (target, props) =>\n    // target是选择器，将其转换成数组\n    (typeof target === \"string\"\n      ? Array.from(document.querySelectorAll(target))\n      : Array.isArray(target)\n      ? target\n      : [target]\n    ).map(element => state.drawers.push(create(element, props)));\n\n  // 初始化和创建画布\n  const create = (element, props = {}) => {\n    const state = getStateFromProps(element, props);\n\n    const init = () => {\n      state.styles = getComputedStyle(element);\n      const update = setup(state);\n      drawer.write = (x, y) => {\n        update(x, y);\n      };\n    };\n\n    const drawer = {\n      read: () => {\n        if (!state.dirty) return;\n        init();\n        state.dirty = false;\n      },\n      write: () => {}\n    };\n\n    return drawer;\n  };\n\n  // 获取每个画布的属性值\n  const getStateFromProps = (element, props) => {\n    const { gradient = {}, pattern = {} } = props;\n\n    const steps = sanitizeGradient(\n      gradient.colors || [[\"#fff\", 1], [0.5, \"#fff\", 0]]\n    );\n\n    const flip = {\n      x: gradient.flip && gradient.flip.x ? -1 : 1,\n      y: gradient.flip && gradient.flip.y ? -1 : 1\n    };\n\n    const patternOpacity = isNumber(pattern.opacity) ? pattern.opacity : 0.25;\n\n    return {\n      type: props.type || \"background\",\n      dirty: true,\n      styles: null,\n      element,\n\n      gradient: {\n        type: gradient.type || \"radial\",\n        flip,\n        angle: gradient.angle || null,\n        steps,\n        scalar: gradient.scalar || { x: 1, y: 1 }\n      },\n\n      pattern: {\n        type: pattern.type || \"none\",\n        data: pattern.type\n          ? getPatternWithOpacity(pattern.type, patternOpacity).toDataURL()\n          : null,\n        opacity: patternOpacity,\n        size: { width: 64, height: 64 }\n      }\n    };\n  };\n\n  // 添加蒙版\n  const getPatternWithOpacity = (pattern, opacity) => {\n    const source = state.patterns[pattern];\n    if (!source) return null;\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = source.width;\n    canvas.height = source.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = `rgba(0, 0, 0, ${1 - opacity})`;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(source, 0, 0);\n    return canvas;\n  };\n\n  // 处理输入的渐变属性\n  const sanitizeGradient = gradient =>\n    gradient\n      // 确保输入是个数组\n      .map(step => (isString(step) ? [step] : step))\n      // 将数组item转格式为对象\n      .map(step => ({\n        color: isString(step[0]) ? step[0] : step[1],\n        opacity: isNumber(step[step.length - 1]) ? step[step.length - 1] : null,\n        stop: isNumber(step[0]) ? step[0] : null\n      }))\n      // 设置默认值\n      .map((step, index, arr) => ({\n        ...step,\n        opacity: step.opacity === null ? 1 : step.opacity,\n        stop: step.stop === null ? index * (1 / (arr.length - 1)) : step.stop\n      }))\n      // 添加RGBA属性\n      .map(step => ({\n        ...step,\n        colorRGBA: toRGBA(step.color, step.opacity)\n      }));\n\n  // 将样式对象转换为实际样式\n  const setup = state => {\n    const { type, element, styles, pattern, gradient } = state;\n\n    element.style.position =\n      styles.position === \"static\" ? \"relative\" : styles.position;\n\n    // 创建层来保持效果\n    const wrapper = document.createElement(\"span\");\n    wrapper.className = \"gradient--wrapper\";\n\n    // 创建效果叠加\n    let overlayStyles =\n      \"position:absolute;pointer-events:none;user-select:none;background-attachment:fixed;\";\n    const overlay = document.createElement(\"span\");\n    const style = overlay.style;\n\n    if (type === \"border\") {\n      const borderTopWidth = parseFloat(styles.borderTopWidth);\n      const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n      const borderRightWidth = parseFloat(styles.borderRightWidth);\n      const borderBottomWidth = parseFloat(styles.borderBottomWidth);\n      const borderTopLeftRadius = parseFloat(styles.borderTopLeftRadius);\n      const backgroundColor = styles.backgroundColor;\n      overlayStyles += `border-radius:${borderTopLeftRadius}px;\n            left:${-borderLeftWidth}px;\n            top:${-borderTopWidth}px;\n            right:${-borderRightWidth}px;\n            bottom:${-borderBottomWidth}px;`;\n\n      const fill = document.createElement(\"div\");\n      fill.style.cssText = `position:absolute;border-radius:${borderTopLeftRadius -\n        borderLeftWidth}px;background-color: ${backgroundColor} \n            left:${borderLeftWidth}px;\n            top:${borderTopWidth}px;\n            right:${borderRightWidth}px;\n            bottom:${borderBottomWidth}px;`;\n      overlay.appendChild(fill);\n    } else if (type === \"background\") {\n      const borderTopLeftRadius = parseFloat(styles.borderTopLeftRadius);\n      overlayStyles += `left:0;top:0;width:100%;height:100%;border-radius:${borderTopLeftRadius}px;`;\n    } else if (type === \"text\") {\n      overlay.innerHTML = element.innerHTML;\n      overlayStyles += `color:transparent;background-clip:text;-webkit-background-clip:text;-moz-background-clip:text;`;\n    }\n\n    // 添加蒙版\n    if (pattern.data) {\n      const mask = `url(${pattern.data}) 0 0 / ${pattern.size.width}px ${pattern.size.height}px;`;\n      overlayStyles += `mask: ${mask}; -moz-mask: ${mask}; -webkit-mask: ${mask};`;\n    }\n\n    style.cssText = overlayStyles;\n\n    wrapper.appendChild(overlay);\n    element.insertAdjacentElement(\"afterbegin\", wrapper);\n\n    // 渐变绘制\n    if (gradient.type === \"linear\") {\n      return (x, y) => {\n        const offset = x * gradient.flip.x + (y * gradient.flip.y) / 2;\n        const gradientString = gradient.steps\n          .map(value => `${value.colorRGBA} ${(offset + value.stop) * 100}%`)\n          .join(\", \");\n\n        style.backgroundImage = `linear-gradient(${gradient.angle}, ${gradientString})`;\n      };\n    } else {\n      const gradientString = gradient.steps\n        .map(value => `${value.colorRGBA} ${value.stop * 100}%`)\n        .join(\", \");\n\n      return (x, y) => {\n        const position = {\n          x: 0.5 + x * gradient.flip.x * gradient.scalar.x,\n          y: 0.5 + y * gradient.flip.y * gradient.scalar.y\n        };\n        style.backgroundImage = `radial-gradient(100vmax 100vmax at ${position.x *\n          100}% ${position.y * 100}%, ${gradientString})`;\n      };\n    }\n  };\n\n  // 转换成RGBA\n  const toRGBA = (color, opacity) =>\n    `rgba${toRGB(color).slice(3, -1)}, ${opacity})`;\n\n  // 转换成RGB\n  const toRGB = color => {\n    if (/rgb\\(/.test(color)) return color;\n    const node = document.createElement(\"div\");\n    node.style.cssText = `display:none;color:${color}`;\n    document.body.appendChild(node);\n    const out = getComputedStyle(node).color;\n    node.parentNode.removeChild(node);\n    return out;\n  };\n\n  // 将度数转换为弧度\n  const degToRad = degrees => degrees * PI_DIVIDED_BY_180;\n\n  // 根据陀螺仪修改每个画布的样式\n  const draw = () => {\n    if (!state.orientationInitial) return;\n\n    const { orientation, orientationInitial, origin, viewport } = state;\n\n    const alpha = orientation.alpha - orientationInitial.alpha;\n    const beta = orientation.beta - orientationInitial.beta;\n    const gamma = orientation.gamma - orientationInitial.gamma;\n\n    let { x, y, z } = origin;\n\n    x = x * Math.cos(degToRad(alpha)) - y * Math.sin(degToRad(alpha));\n    y = y * Math.cos(degToRad(alpha)) + x * Math.sin(degToRad(alpha));\n    y = y * Math.cos(degToRad(beta)) - z * Math.sin(degToRad(beta));\n    z = z * Math.cos(degToRad(beta)) + y * Math.sin(degToRad(beta));\n    z = z * Math.cos(degToRad(gamma)) - x * Math.sin(degToRad(gamma));\n    x = x * Math.cos(degToRad(gamma)) + z * Math.sin(degToRad(gamma));\n\n    const viewportScaleFactor = viewport.width / viewport.height;\n    const px = x / (STRENGTH * viewportScaleFactor);\n    const py = y / (STRENGTH / viewportScaleFactor);\n\n    state.drawers.forEach(drawer => drawer.read());\n\n    state.drawers.forEach(drawer => drawer.write(px, py));\n  };\n\n  // 开始绘制循环\n  const tick = () => {\n    draw();\n    requestAnimationFrame(tick);\n  };\n\n  // 添加事件监听函数\n  const init = () => {\n    // 当文档显示或隐藏时，重置初始化方向\n    document.addEventListener(\"visibilitychange\", e => {\n      state.orientationInitial = null;\n    });\n\n    // 注册陀螺仪事件\n    window.addEventListener(\"deviceorientation\", e => {\n      if (e.alpha === null) return;\n      state.orientation.alpha = e.alpha;\n      state.orientation.beta = e.beta;\n      state.orientation.gamma = e.gamma;\n      if (state.orientationInitial === null) {\n        state.orientationInitial = {\n          alpha: e.alpha,\n          beta: e.beta,\n          gamma: e.gamma\n        };\n        tick();\n      }\n    });\n  };\n\n  // 运行\n  init();\n}\n\nexport default createGyroGradient;\n"],"names":["const","isNumber","v","isString","createGyroGradient","window","document","PI_DIVIDED_BY_180","Math","PI","state","orientationInitial","orientation","alpha","beta","gamma","viewport","width","innerWidth","height","innerHeight","origin","x","y","z","patterns","noise","canvas","createElement","ctx","getContext","let","fillStyle","random","fillRect","generateNoise","devicePixelRatio","drawers","target","props","Array","from","querySelectorAll","isArray","map","element","push","create","getStateFromProps","drawer","read","dirty","styles","getComputedStyle","update","setup","write","init","steps","sanitizeGradient","gradient","colors","flip","patternOpacity","pattern","opacity","type","angle","scalar","data","getPatternWithOpacity","toDataURL","size","source","drawImage","step","color","length","stop","index","arr","Object","colorRGBA","toRGBA","style","position","wrapper","className","overlayStyles","overlay","borderTopWidth","parseFloat","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopLeftRadius","backgroundColor","fill","cssText","appendChild","innerHTML","mask","insertAdjacentElement","offset","gradientString","value","join","backgroundImage","toRGB","slice","test","node","body","out","parentNode","removeChild","degToRad","degrees","tick","cos","sin","viewportScaleFactor","px","py","forEach","draw","requestAnimationFrame","addEventListener","e"],"mappings":"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"}